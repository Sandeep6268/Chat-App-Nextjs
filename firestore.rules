
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can only read/write their own user document
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      
      // Allow users to read other users' basic info for chat functionality
      allow read: if request.auth != null;
    }
    
    // Chats collection - users can only access chats they are participants in
    match /chats/{chatId} {
      allow read, create: if request.auth != null && 
        request.auth.uid in request.resource.data.participants;
      
      allow update, delete: if request.auth != null && 
        request.auth.uid in resource.data.participants;
      
      // Users can listen to real-time updates
      allow listen: if request.auth != null && 
        request.auth.uid in resource.data.participants;
    }
    
    // Messages subcollection - users can only access messages in their chats
    match /chats/{chatId}/messages/{messageId} {
      allow read, create: if request.auth != null && 
        canAccessChat(chatId);
      
      allow update: if request.auth != null && 
        request.auth.uid == resource.data.senderId && 
        canAccessChat(chatId);
      
      allow delete: if false; // Messages cannot be deleted
      
      // Users can listen to real-time updates
      allow listen: if request.auth != null && 
        canAccessChat(chatId);
    }
    
    // Helper function to check if user can access a chat
    function canAccessChat(chatId) {
      return request.auth != null && 
        request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.participants;
    }
    
    // User chats collection for quick access to user's chats
    match /userChats/{userId}/{document=**} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
  }
}